[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "sproxxo"
version = "0.1.0"
description = "Sproxxo Fraud Detection MLOps Platform"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Sproxxo Team", email = "samuel.nm10@gmail.com"}
]
requires-python = ">=3.9"
dependencies = [
    # Core ML dependencies
    "scikit-learn>=1.3.0",
    "xgboost>=2.0.0",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "mlflow>=2.8.0",

    # Web framework for API
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",

    # Monitoring and observability
    "structlog>=23.2.0",

    # Data processing
    "pydantic-settings>=2.1.0",
    "python-dotenv>=1.0.0",

    # Testing
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.25.0",

    # Development tools
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",

    # Security tools
    "bandit[toml]>=1.7.5",
]

[project.optional-dependencies]
dev = [
    "jupyter>=1.0.0",
    "ipykernel>=6.25.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "plotly>=5.17.0",
    "tox>=4.0",
    "tox-uv>=1.0.0",
]
mlops = [
    "mlflow>=2.8.0",
]

[project.urls]
Homepage = "https://github.com/SamuelNavarro/bcspin"
Repository = "https://github.com/SamuelNavarro/bcspin"
"Bug Tracker" = "https://github.com/SamuelNavarro/bcspin/issues"

[project.scripts]
sproxxo-train = "sproxxo.training.train:main"
sproxxo-api = "sproxxo.api.main:main"
sproxxo-api-client = "examples.api_client:main"

[tool.hatch.build.targets.wheel]
packages = ["sproxxo"]

[tool.hatch.build.targets.sdist]
exclude = [
    ".venv",
    ".venv-local",
    "/.tox",
    "/mlruns",
    "/mlartifacts",
    "/artifacts",
    "/.git",
    "/__pycache__",
    "*.pyc",
    "*.pyo",
    ".pytest_cache",
    ".mypy_cache",
    ".coverage",
    "htmlcov"
]

[tool.tox]
isolated_build = true
envlist = ["format-fix", "format", "lint", "test"]
requires = ["tox>=4.0", "tox-uv"]
parallel_show_output = true

[tool.tox.testenv]
allowlist_externals = ["uv", "ruff", "mypy", "pytest"]
basepython = "python3.11"
deps = [
    "pytest",
    "pytest-cov",
    "ruff",
    "mypy",
    "pandas-stubs",
    "bandit[toml]"
]

[tool.tox.env.test]
commands = [
    ["uv", "sync", "--extra", "dev"],
    ["pytest", "tests/", "--cov=sproxxo", "--cov-report=term-missing", "--cov-report=html", "--cov-fail-under=40", "-x"]
]

[tool.tox.env.format]
commands = [["ruff", "format", "--check", "sproxxo", "tests"]]

[tool.tox.env.format-fix]
commands = [["ruff", "format", "sproxxo", "tests"]]

[tool.tox.env.lint]
commands = [
    ["ruff", "check", "sproxxo", "tests"],
    ["mypy", "sproxxo", "tests"]
]

[tool.tox.env.security]
commands = [
    ["bandit", "-r", "sproxxo", "-f", "json", "-o", "bandit-report.json"]
]

[tool.mypy]
python_version = "3.11"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "mlflow.*",
]
ignore_missing_imports = true

[tool.ruff]
line-length = 120
exclude = [".tox", "*.egg", "build", "data", "htmlcov", ".pytest_cache"]

[tool.ruff.lint]
select = ["E", "F", "W", "I", "D", "B", "C4", "UP"]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config --tb=short"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
required_plugins = ["pytest-cov"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "performance: marks tests as performance tests",
]

[tool.coverage.run]
source = ["sproxxo"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
    "*/.venv-local/*",
    "*/.tox/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"

[tool.bandit]
exclude_dirs = ["tests", ".tox", ".venv", "venv", "build", "dist"]
skips = ["B101", "B601"]  # Skip assert statements and shell injection
targets = ["sproxxo"]

[tool.bandit.assert_used]
skips = ["*_test.py", "*/test_*.py"]
